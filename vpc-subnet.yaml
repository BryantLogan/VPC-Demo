Resources:
# Create VPC
  DemoVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      Tags:
        - 
          Key: "DemoVPC"
          Value: "AWS::StackName"

# Create 2 public subnets
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: "DemoVPC"      
      AvailabilityZone: "us-east-1a"
      CidrBlock: "10.0.0.0/24"
      Tags:
        -
          Key: "Name"
          Value: "PublicSubnetA"

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: "DemoVPC"      
      AvailabilityZone: "us-east-1b"
      CidrBlock: "10.0.1.0/24"
      Tags:
        -
          Key: "Name"
          Value: "PublicSubnetB"

# Create 2 private subnets
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: "DemoVPC"      
      AvailabilityZone: "us-east-1a"
      CidrBlock: "10.0.16.0/20"
      Tags:
        -
          Key: "Name"
          Value: "PrivateSubnetA"

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: "DemoVPC"      
      AvailabilityZone: "us-east-1b"
      CidrBlock: "10.0.32.0/20"
      Tags:
        -
          Key: "Name"
          Value: "PrivateSubnetB"

# Create EC2 Instance in public subnet A with public IPv4 address
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-09d3b3274b6c5d4aa"
      InstanceType: "t2.micro"
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId:
            Ref: "PublicSubnetA"


# Create Internet Gateway
  DemoIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        -
          Key: "Name"
          Value: "DemoVPC-IGW"

# Attach IGW to VPC
  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: "DemoIGW"
      VpcId:
        Ref: "DemoVPC"